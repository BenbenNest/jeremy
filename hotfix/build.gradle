apply plugin: 'com.android.application'
//apply plugin: 'com.jeremy.plugin.Register'

android {
    compileSdkVersion 26
    buildToolsVersion "27.0.3"


    defaultConfig {
        applicationId "com.jeremy.hotfix"
        minSdkVersion 15
        targetSdkVersion 26
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    compile 'com.android.support:appcompat-v7:26.1.0'
    compile 'com.android.support.constraint:constraint-layout:1.0.2'
    testCompile 'junit:junit:4.12'
    androidTestCompile('com.android.support.test.espresso:espresso-core:3.0.1', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })

}

android.applicationVariants.all { variant->
    def dexTask = project.tasks.findByName("transformClassesWithDexForDebug")
    def preDexTask = project.tasks.findByName("transformClassesWithPreDexForDebug")
    if(preDexTask) {
        project.logger.error "======preDexTask======"
        preDexTask.inputs.files.files.each {file ->
            project.logger.error "inputs =$file.absolutePath"
        }

        preDexTask.outputs.files.files.each {file ->
            project.logger.error "outputs =$file.absolutePath"
        }
    }
    if(dexTask) {
        project.logger.error "======dexTask======"
        dexTask.inputs.files.files.each {file ->
            project.logger.error "inputs =$file.absolutePath"
        }

        dexTask.outputs.files.files.each {file ->
            project.logger.error "outputs =$file.absolutePath"
        }
    }
}
