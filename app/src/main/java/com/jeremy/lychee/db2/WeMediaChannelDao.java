package com.jeremy.lychee.db2;

import android.database.Cursor;
import android.database.sqlite.SQLiteDatabase;
import android.database.sqlite.SQLiteStatement;

import de.greenrobot.dao.AbstractDao;
import de.greenrobot.dao.Property;
import de.greenrobot.dao.internal.DaoConfig;

import com.jeremy.lychee.db2.WeMediaChannel;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.
/** 
 * DAO for table WE_MEDIA_CHANNEL.
*/
public class WeMediaChannelDao extends AbstractDao<WeMediaChannel, String> {

    public static final String TABLENAME = "WE_MEDIA_CHANNEL";

    /**
     * Properties of entity WeMediaChannel.<br/>
     * Can be used for QueryBuilder and for referencing column names.
    */
    public static class Properties {
        public final static Property Id = new Property(0, String.class, "id", true, "ID");
        public final static Property Uid = new Property(1, String.class, "uid", false, "UID");
        public final static Property C_id = new Property(2, String.class, "c_id", false, "C_ID");
        public final static Property Source_type = new Property(3, String.class, "source_type", false, "SOURCE_TYPE");
        public final static Property Topic_tag = new Property(4, String.class, "topic_tag", false, "TOPIC_TAG");
        public final static Property Name = new Property(5, String.class, "name", false, "NAME");
        public final static Property Domain = new Property(6, String.class, "domain", false, "DOMAIN");
        public final static Property Icon = new Property(7, String.class, "icon", false, "ICON");
        public final static Property Backimg = new Property(8, String.class, "backimg", false, "BACKIMG");
        public final static Property Summary = new Property(9, String.class, "summary", false, "SUMMARY");
        public final static Property Weight = new Property(10, String.class, "weight", false, "WEIGHT");
        public final static Property Is_deleted = new Property(11, Integer.class, "is_deleted", false, "IS_DELETED");
        public final static Property Is_public = new Property(12, Integer.class, "is_public", false, "IS_PUBLIC");
        public final static Property Create_time = new Property(13, String.class, "create_time", false, "CREATE_TIME");
        public final static Property Is_sub = new Property(14, Boolean.class, "is_sub", false, "IS_SUB");
        public final static Property Is_my = new Property(15, Boolean.class, "is_my", false, "IS_MY");
        public final static Property Is_hot = new Property(16, Boolean.class, "is_hot", false, "IS_HOT");
        public final static Property Nickname = new Property(17, String.class, "nickname", false, "NICKNAME");
        public final static Property News_num = new Property(18, Integer.class, "news_num", false, "NEWS_NUM");
        public final static Property Sub_num = new Property(19, Integer.class, "sub_num", false, "SUB_NUM");
        public final static Property Increase_sub_num = new Property(20, Integer.class, "increase_sub_num", false, "INCREASE_SUB_NUM");
        public final static Property Update_news_num = new Property(21, Integer.class, "update_news_num", false, "UPDATE_NEWS_NUM");
        public final static Property Follow = new Property(22, String.class, "follow", false, "FOLLOW");
        public final static Property Fans = new Property(23, String.class, "fans", false, "FANS");
    };


    public WeMediaChannelDao(DaoConfig config) {
        super(config);
    }
    
    public WeMediaChannelDao(DaoConfig config, DaoSession daoSession) {
        super(config, daoSession);
    }

    /** Creates the underlying database table. */
    public static void createTable(SQLiteDatabase db, boolean ifNotExists) {
        String constraint = ifNotExists? "IF NOT EXISTS ": "";
        db.execSQL("CREATE TABLE " + constraint + "'WE_MEDIA_CHANNEL' (" + //
                "'ID' TEXT PRIMARY KEY NOT NULL ," + // 0: id
                "'UID' TEXT," + // 1: uid
                "'C_ID' TEXT," + // 2: c_id
                "'SOURCE_TYPE' TEXT," + // 3: source_type
                "'TOPIC_TAG' TEXT," + // 4: topic_tag
                "'NAME' TEXT NOT NULL ," + // 5: name
                "'DOMAIN' TEXT," + // 6: domain
                "'ICON' TEXT," + // 7: icon
                "'BACKIMG' TEXT," + // 8: backimg
                "'SUMMARY' TEXT," + // 9: summary
                "'WEIGHT' TEXT," + // 10: weight
                "'IS_DELETED' INTEGER," + // 11: is_deleted
                "'IS_PUBLIC' INTEGER," + // 12: is_public
                "'CREATE_TIME' TEXT," + // 13: create_time
                "'IS_SUB' INTEGER," + // 14: is_sub
                "'IS_MY' INTEGER," + // 15: is_my
                "'IS_HOT' INTEGER," + // 16: is_hot
                "'NICKNAME' TEXT," + // 17: nickname
                "'NEWS_NUM' INTEGER," + // 18: news_num
                "'SUB_NUM' INTEGER," + // 19: sub_num
                "'INCREASE_SUB_NUM' INTEGER," + // 20: increase_sub_num
                "'UPDATE_NEWS_NUM' INTEGER," + // 21: update_news_num
                "'FOLLOW' TEXT," + // 22: follow
                "'FANS' TEXT);"); // 23: fans
    }

    /** Drops the underlying database table. */
    public static void dropTable(SQLiteDatabase db, boolean ifExists) {
        String sql = "DROP TABLE " + (ifExists ? "IF EXISTS " : "") + "'WE_MEDIA_CHANNEL'";
        db.execSQL(sql);
    }

    /** @inheritdoc */
    @Override
    protected void bindValues(SQLiteStatement stmt, WeMediaChannel entity) {
        stmt.clearBindings();
        stmt.bindString(1, entity.getId());
 
        String uid = entity.getUid();
        if (uid != null) {
            stmt.bindString(2, uid);
        }
 
        String c_id = entity.getC_id();
        if (c_id != null) {
            stmt.bindString(3, c_id);
        }
 
        String source_type = entity.getSource_type();
        if (source_type != null) {
            stmt.bindString(4, source_type);
        }
 
        String topic_tag = entity.getTopic_tag();
        if (topic_tag != null) {
            stmt.bindString(5, topic_tag);
        }
        stmt.bindString(6, entity.getName());
 
        String domain = entity.getDomain();
        if (domain != null) {
            stmt.bindString(7, domain);
        }
 
        String icon = entity.getIcon();
        if (icon != null) {
            stmt.bindString(8, icon);
        }
 
        String backimg = entity.getBackimg();
        if (backimg != null) {
            stmt.bindString(9, backimg);
        }
 
        String summary = entity.getSummary();
        if (summary != null) {
            stmt.bindString(10, summary);
        }
 
        String weight = entity.getWeight();
        if (weight != null) {
            stmt.bindString(11, weight);
        }
 
        Integer is_deleted = entity.getIs_deleted();
        if (is_deleted != null) {
            stmt.bindLong(12, is_deleted);
        }
 
        Integer is_public = entity.getIs_public();
        if (is_public != null) {
            stmt.bindLong(13, is_public);
        }
 
        String create_time = entity.getCreate_time();
        if (create_time != null) {
            stmt.bindString(14, create_time);
        }
 
        Boolean is_sub = entity.getIs_sub();
        if (is_sub != null) {
            stmt.bindLong(15, is_sub ? 1l: 0l);
        }
 
        Boolean is_my = entity.getIs_my();
        if (is_my != null) {
            stmt.bindLong(16, is_my ? 1l: 0l);
        }
 
        Boolean is_hot = entity.getIs_hot();
        if (is_hot != null) {
            stmt.bindLong(17, is_hot ? 1l: 0l);
        }
 
        String nickname = entity.getNickname();
        if (nickname != null) {
            stmt.bindString(18, nickname);
        }
 
        Integer news_num = entity.getNews_num();
        if (news_num != null) {
            stmt.bindLong(19, news_num);
        }
 
        Integer sub_num = entity.getSub_num();
        if (sub_num != null) {
            stmt.bindLong(20, sub_num);
        }
 
        Integer increase_sub_num = entity.getIncrease_sub_num();
        if (increase_sub_num != null) {
            stmt.bindLong(21, increase_sub_num);
        }
 
        Integer update_news_num = entity.getUpdate_news_num();
        if (update_news_num != null) {
            stmt.bindLong(22, update_news_num);
        }
 
        String follow = entity.getFollow();
        if (follow != null) {
            stmt.bindString(23, follow);
        }
 
        String fans = entity.getFans();
        if (fans != null) {
            stmt.bindString(24, fans);
        }
    }

    /** @inheritdoc */
    @Override
    public String readKey(Cursor cursor, int offset) {
        return cursor.getString(offset + 0);
    }    

    /** @inheritdoc */
    @Override
    public WeMediaChannel readEntity(Cursor cursor, int offset) {
        WeMediaChannel entity = new WeMediaChannel( //
            cursor.getString(offset + 0), // id
            cursor.isNull(offset + 1) ? null : cursor.getString(offset + 1), // uid
            cursor.isNull(offset + 2) ? null : cursor.getString(offset + 2), // c_id
            cursor.isNull(offset + 3) ? null : cursor.getString(offset + 3), // source_type
            cursor.isNull(offset + 4) ? null : cursor.getString(offset + 4), // topic_tag
            cursor.getString(offset + 5), // name
            cursor.isNull(offset + 6) ? null : cursor.getString(offset + 6), // domain
            cursor.isNull(offset + 7) ? null : cursor.getString(offset + 7), // icon
            cursor.isNull(offset + 8) ? null : cursor.getString(offset + 8), // backimg
            cursor.isNull(offset + 9) ? null : cursor.getString(offset + 9), // summary
            cursor.isNull(offset + 10) ? null : cursor.getString(offset + 10), // weight
            cursor.isNull(offset + 11) ? null : cursor.getInt(offset + 11), // is_deleted
            cursor.isNull(offset + 12) ? null : cursor.getInt(offset + 12), // is_public
            cursor.isNull(offset + 13) ? null : cursor.getString(offset + 13), // create_time
            cursor.isNull(offset + 14) ? null : cursor.getShort(offset + 14) != 0, // is_sub
            cursor.isNull(offset + 15) ? null : cursor.getShort(offset + 15) != 0, // is_my
            cursor.isNull(offset + 16) ? null : cursor.getShort(offset + 16) != 0, // is_hot
            cursor.isNull(offset + 17) ? null : cursor.getString(offset + 17), // nickname
            cursor.isNull(offset + 18) ? null : cursor.getInt(offset + 18), // news_num
            cursor.isNull(offset + 19) ? null : cursor.getInt(offset + 19), // sub_num
            cursor.isNull(offset + 20) ? null : cursor.getInt(offset + 20), // increase_sub_num
            cursor.isNull(offset + 21) ? null : cursor.getInt(offset + 21), // update_news_num
            cursor.isNull(offset + 22) ? null : cursor.getString(offset + 22), // follow
            cursor.isNull(offset + 23) ? null : cursor.getString(offset + 23) // fans
        );
        return entity;
    }
     
    /** @inheritdoc */
    @Override
    public void readEntity(Cursor cursor, WeMediaChannel entity, int offset) {
        entity.setId(cursor.getString(offset + 0));
        entity.setUid(cursor.isNull(offset + 1) ? null : cursor.getString(offset + 1));
        entity.setC_id(cursor.isNull(offset + 2) ? null : cursor.getString(offset + 2));
        entity.setSource_type(cursor.isNull(offset + 3) ? null : cursor.getString(offset + 3));
        entity.setTopic_tag(cursor.isNull(offset + 4) ? null : cursor.getString(offset + 4));
        entity.setName(cursor.getString(offset + 5));
        entity.setDomain(cursor.isNull(offset + 6) ? null : cursor.getString(offset + 6));
        entity.setIcon(cursor.isNull(offset + 7) ? null : cursor.getString(offset + 7));
        entity.setBackimg(cursor.isNull(offset + 8) ? null : cursor.getString(offset + 8));
        entity.setSummary(cursor.isNull(offset + 9) ? null : cursor.getString(offset + 9));
        entity.setWeight(cursor.isNull(offset + 10) ? null : cursor.getString(offset + 10));
        entity.setIs_deleted(cursor.isNull(offset + 11) ? null : cursor.getInt(offset + 11));
        entity.setIs_public(cursor.isNull(offset + 12) ? null : cursor.getInt(offset + 12));
        entity.setCreate_time(cursor.isNull(offset + 13) ? null : cursor.getString(offset + 13));
        entity.setIs_sub(cursor.isNull(offset + 14) ? null : cursor.getShort(offset + 14) != 0);
        entity.setIs_my(cursor.isNull(offset + 15) ? null : cursor.getShort(offset + 15) != 0);
        entity.setIs_hot(cursor.isNull(offset + 16) ? null : cursor.getShort(offset + 16) != 0);
        entity.setNickname(cursor.isNull(offset + 17) ? null : cursor.getString(offset + 17));
        entity.setNews_num(cursor.isNull(offset + 18) ? null : cursor.getInt(offset + 18));
        entity.setSub_num(cursor.isNull(offset + 19) ? null : cursor.getInt(offset + 19));
        entity.setIncrease_sub_num(cursor.isNull(offset + 20) ? null : cursor.getInt(offset + 20));
        entity.setUpdate_news_num(cursor.isNull(offset + 21) ? null : cursor.getInt(offset + 21));
        entity.setFollow(cursor.isNull(offset + 22) ? null : cursor.getString(offset + 22));
        entity.setFans(cursor.isNull(offset + 23) ? null : cursor.getString(offset + 23));
     }
    
    /** @inheritdoc */
    @Override
    protected String updateKeyAfterInsert(WeMediaChannel entity, long rowId) {
        return entity.getId();
    }
    
    /** @inheritdoc */
    @Override
    public String getKey(WeMediaChannel entity) {
        if(entity != null) {
            return entity.getId();
        } else {
            return null;
        }
    }

    /** @inheritdoc */
    @Override    
    protected boolean isEntityUpdateable() {
        return true;
    }
    
}
